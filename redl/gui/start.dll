

	if(codest0[0] == 'g')	 {
		if(codest0[1] == 'l') {
			if(codest0[2] == 'a') {
				if(codest0[3] == 'd') {
					if(codest0[4] == 'e') {
					
					
							string gladel;
							string namew;
							int x = 6;
							for(;x<250;x++) {
								if(code[voice][x] == ',') {
									break;
								}
								gladel += code[voice][x]; 
							}
							x+=1;
							for(;x<250;x++) {
								if(code[voice][x] == ';') {
									break;
								}
								namew += code[voice][x]; 
							}
					
							oute << "#include <stdio.h>" << '\n';
							oute << "#include <string.h>" << '\n';
							oute << "#include <time.h>" << '\n';
							oute << "#include <gtk/gtk.h>" << '\n';
							oute << "GtkBuilder *builder;" << '\n';
							oute << "GtkWidget  *window;" << '\n';
							oute << "int main (int argc, char *argv[]) {" << '\n';
							oute << "gtk_init (&argc, &argv);" << '\n';
							oute << "builder = gtk_builder_new ();" << '\n';
							oute << "gtk_builder_add_from_file (builder, " << gladel << ", NULL);" << '\n';
							oute << "gtk_builder_connect_signals (builder, NULL);" << '\n';
							oute << "window = GTK_WIDGET (gtk_builder_get_object (builder, " << namew << "));" << '\n';
							oute << "g_object_unref (G_OBJECT (builder));" << '\n';
							oute << "gtk_widget_show_all (window);" << '\n';
							oute << "g_signal_connect(G_OBJECT(window), \"destroy\", G_CALLBACK(gtk_main_quit), NULL);" << '\n';
							oute << "gtk_main ();" << '\n';
							oute << "return 0;" << '\n';
							oute << "}" << '\n';

	
					}
				}
			}
		}
	}
