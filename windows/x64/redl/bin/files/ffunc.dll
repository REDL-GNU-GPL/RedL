	if(codest0[0] == 'i')	 {
		if(codest0[1] == 'f') {
			if(codest0[2] == 'n') {
				if(codest0[3] == 'o') {
					if(codest0[4] == 'p') {
	
							string varib;
							for(int x = 5;x<1024;x++) {
								if(codest0[x] == ':') {
									break;
								}
								varib += codest0[x]; 
							}
							out << "if(!" << varib << ") {" << '\n';
							
					}
				}
			}
		}
	}
	
	if(codest0[0] == 'w')	 {
		if(codest0[1] == 'h') {
			if(codest0[2] == 'i') {
				if(codest0[3] == 'l') {
					if(codest0[4] == 'e') {
						if(codest0[5] == '_') {
							if(codest0[6] == 'e') {
								if(codest0[7] == 'n') {
									if(codest0[8] == 'd') {
									
										string varib;
										for(int x = 9;x<1024;x++) {
											if(codest0[x] == ':') {
												break;
											}
											varib += codest0[x]; 
										}
										out << "while (!" << varib << ".eof()) {" << '\n';
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	
	if(codest0[0] == 'g')	 {
		if(codest0[1] == 'e') {
			if(codest0[2] == 't') {
				if(codest0[3] == 'l') {
					if(codest0[4] == 'i') {
						if(codest0[5] == 'n') {
							if(codest0[6] == 'e') {
								if(codest0[7] == '_') {
									if(codest0[8] == 'i') {
										if(codest0[9] == 'n') {
									
											string varib;
											for(int x = 10;x<1024;x++) {
												if(codest0[x] == ':') {
													break;
												}
												varib += codest0[x]; 
											}
											out << "while (getline(in, " << varib << ")) {" << '\n';
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	
	
	if(codest0[0] == 'e')	 {
		if(codest0[1] == 'x') {
			if(codest0[2] == 'i') {
				if(codest0[3] == 't') {
					if(codest0[4] == '_') {
						if(codest0[5] == 'f') {
							if(codest0[6] == 'i') {
								if(codest0[7] == 'l') {
									if(codest0[8] == 'e') {
									
										string varib;
										for(int x = 9;x<1024;x++) {
											if(codest0[x] == ';') {
												break;
											}
											varib += codest0[x]; 
										}
										out << varib << ".close();" << '\n';
									}
								}
							}
						}
					}
				}
			}
		}
	}

	if(codest0[0] == 'g')	 {
		if(codest0[1] == 'e') {
			if(codest0[2] == 't') {
				if(codest0[3] == '_') {
					if(codest0[4] == 's') {
						if(codest0[5] == 't') {
							if(codest0[6] == 'r') {
								if(codest0[7] == 'e') {
									if(codest0[8] == 'a') {
										if(codest0[9] == 'm') {
										
											string var;
											string chars;
											string size;
											int x = 10;
											for(;x<1024;x++) {
												if(codest0[x] == ',') {
													break;
												}
												var += codest0[x]; 
											}
											
											x+=1;
											for(;x<1024;x++) {
												if(codest0[x] == ',') {
													break;
												}
												chars += codest0[x]; 
											}
											x+=1;
											for(;x<1024;x++) {
												if(codest0[x] == ';') {
													break;
												}
												size += codest0[x]; 
											}
									out << var << ".getline(" << chars << "," << size << ");" << '\n';
									
										}
									}		
								}
							}
						}
					}
				}
			}
		}
	}
	
	
	if(codest0[0] == 's')	 {
		if(codest0[1] == 't') {
			if(codest0[2] == 'r') {
				if(codest0[3] == '_') {
					if(codest0[4] == 's') {
						if(codest0[5] == 't') {
							if(codest0[6] == 'r') {
								if(codest0[7] == 'e') {
									if(codest0[8] == 'a') {
										if(codest0[9] == 'm') {
										
											string namefile;
											string varfile;
											string varintstroke;
											string maxstroke;
											int x = 10;
											
											for(;x<1024;x++) {
												if(codest0[x] == ',') {
													break;
												}
												namefile += codest0[x]; 
											}
											
											x+=1;
											for(;x<1024;x++) {
												if(codest0[x] == ',') {
													break;
												}
												varfile += codest0[x]; 
											}
											
											x+=1;
											for(;x<1024;x++) {
												if(codest0[x] == ',') {
													break;
												}
												varintstroke += codest0[x]; 
											}
											x+=1;
											for(;x<1024;x++) {
												if(codest0[x] == ';') {
													break;
												}
												maxstroke += codest0[x]; 
											}
									
											
										out << "char *REDLSTROKEMAINEER = new char [15000];" << '\n';
										out << "int " << varintstroke << "=0;" << '\n';
										out << "ifstream " << varfile << "(" << namefile << ");" << '\n';
										out << "while (!" << varfile << ".eof()) {"	<< '\n';
										out << varfile << ".getline(REDLSTROKEMAINEER, " << maxstroke << ", \'\\n\');" << '\n';
										out << varintstroke << "++;" << '\n';
										out << "}" << '\n';					
										out << varfile << ".close();" << '\n';
									
									
									
									
									
									
									
									
									
										}
									}		
								}
							}
						}
					}
				}
			}
		}
	}
